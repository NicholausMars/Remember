// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Remember Remember render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Remember
    cards={
        Array [
            Object {
              "description": "DESCRIPTION1",
              "title": "TITLE1",
            },
            Object {
              "description": "DESCRIPTION2",
              "title": "TITLE2",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="heading-primary"
>
          Remember
</h1>,
        <Connect(Form) />,
        <hr
          className="u-mt-sm u-mb-sm"
/>,
        <div
          className="row"
>
          <Unknown
                    description="DESCRIPTION1"
                    title="TITLE1"
          />
          <Unknown
                    description="DESCRIPTION2"
                    title="TITLE2"
          />
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Remember",
          "className": "heading-primary",
        },
        "ref": null,
        "rendered": "Remember",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "u-mt-sm u-mb-sm",
        },
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown
              description="DESCRIPTION1"
              title="TITLE1"
/>,
            <Unknown
              description="DESCRIPTION2"
              title="TITLE2"
/>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "description": "DESCRIPTION1",
              "title": "TITLE1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "function",
            "props": Object {
              "description": "DESCRIPTION2",
              "title": "TITLE2",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="heading-primary"
>
            Remember
</h1>,
          <Connect(Form) />,
          <hr
            className="u-mt-sm u-mb-sm"
/>,
          <div
            className="row"
>
            <Unknown
                        description="DESCRIPTION1"
                        title="TITLE1"
            />
            <Unknown
                        description="DESCRIPTION2"
                        title="TITLE2"
            />
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Remember",
            "className": "heading-primary",
          },
          "ref": null,
          "rendered": "Remember",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "u-mt-sm u-mb-sm",
          },
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown
                description="DESCRIPTION1"
                title="TITLE1"
/>,
              <Unknown
                description="DESCRIPTION2"
                title="TITLE2"
/>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "description": "DESCRIPTION1",
                "title": "TITLE1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "description": "DESCRIPTION2",
                "title": "TITLE2",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "disableLifecycleMethods": true,
    "hydrateIn": undefined,
  },
}
`;
